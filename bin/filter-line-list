#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import globin
import numpy as np
from tqdm import tqdm
import sys
import os

from argparse import ArgumentParser

def clean_input_files():
	os.system("rm tmp atoms.input molecules.input kurucz.input keyword.input")

def main(line_list, thresholds):
	atmos = globin.falc
	atmos.line_list = "tmp"
	atmos.set_mode(0)
	atmos.set_mu(1)
	atmos.set_spectrum_normalization(True, 1)
	
	atmos.create_input_files()

	text, lines = globin.atoms.read_RLK_lines(line_list)	
	Nlines = len(lines)

	line_depth = np.zeros(Nlines)

	for idl in tqdm(range(Nlines)):
		delta_J = lines[idl].Jlow - lines[idl].Jup
		if abs(delta_J)>1:
			continue

		tmp = open("tmp", "w")
		tmp.writelines(text[idl])
		tmp.close()

		# for each line individual one + continuum far away (2 A from the lower wavelength limit)
		wavelength = globin.utils.compute_wavelength_grid(
							lmin=lines[idl].lam0-0.1, 
							lmax=lines[idl].lam0+0.1, 
							dlam=2e-4, 
							unit="nm")
		wavelength = np.insert(wavelength, 0, lines[idl].lam0-5)
		atmos.set_wavelength_grid(wavelength)

		lam0 = lines[idl].lam0
		spec = globin.inversion.synthesize(atmos)

		#globin.visualize.plot_spectra(spec.spec[0,0], spec.wavelength)
		#globin.show()

		line_depth[idl] = 1-np.min(spec.I[0,0])

		text[idl] = f"{line_depth[idl]:.4e}  " + text[idl]

	tmp = open(f"{line_list}_line_depth", "w")
	tmp.writelines(text)
	tmp.close()

	for threshold in thresholds:
		inds = np.where(line_depth>=threshold)[0]
		tmp = open(f"{line_list}_th{threshold}", "w")
		tmp.writelines([text[ind] for ind in inds])
		tmp.close()

if __name__=="__main__":
	aparser = ArgumentParser(description="Filter a line list based on specified line depth threshold")

	aparser.add_argument("line_list", type=str, help="Path to the Kurucz line list")
	aparser.add_argument("--thresholds", type=str, nargs="*", help="List of threshold values")

	args = aparser.parse_args()

	thresholds = list(map(float, args.thresholds))

	main(args.line_list, thresholds)

	clean_input_files()